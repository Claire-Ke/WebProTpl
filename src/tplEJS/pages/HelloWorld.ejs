<!--
Project: WebProTpl
Author：12278
Email：2726893248@qq.com
CreateDate：2019-01-01 00:00:00
IDE: WebStorm
-->
<%
let options_obj = htmlWebpackPlugin.options,
        publicPath_str = htmlWebpackPlugin.files.publicPath,
        data_obj = options_obj.data,
        isOpen_boo = data_obj.appCache_obj.open_boo,
        path1_str = `others/${ data_obj.appCache_obj.name_str }`,
        assets_obj = compilation[ 'assets' ],
        metaLink = require( 'tplEJSMLDir/HelloWorld.ejs' ),
        manifest = require( 'manifestDir/HelloWorld.manifest.json' ),
        sriTool_fun = require( 'configDir/SRITool.js' ),
        outAssets_fun = require( 'configDir/OutAssets.js' ),
        preloadTool_fun = require( 'configDir/PreloadTool.js' ),
        appCacheTool_fun = require( 'configDir/AppCacheTool.js' );
%>
<% isOpen_boo && appCacheTool_fun( {
    assets_arr: Object.keys( assets_obj ),
    publicPath_str,
    data_obj,
    path1_str
} ) %>
<!DOCTYPE html>
<html class = 'css-reset fullS ofh helloWorld vueTVar'
      lang = 'zh-CN' <%= isOpen_boo
                         ? `manifest='${ publicPath_str + path1_str }'`
                         : `` %> >
<head>
    <%= metaLink( data_obj.metaLinkData ) %>
    <%= isPro && data_obj.preloadTool_obj.open_boo
        ? preloadTool_fun( {
                isPro_boo: isPro,
                preload_arr: data_obj.preloadTool_obj.preload_arr,
                assets_obj,
                publicPath_str
            } )
        : `` %>
    <% if( data_obj.startAppleTSI_boo ){ %>
        <% for( const item of
                require( 'configDir/StartAppleTSI_Arr.js' ).startAppleTSI_arr ){ %>
            <link rel = 'apple-touch-startup-image'
                  type = '<%= item.type %>'
                  sizes = '<%= item.attrs.sizes %>'
                  media = '<%= item.attrs.media %>'
                  href = '<%= item.href %>'
                  crossorigin = '<%= item.crossorigin %>' />
        <% } %>
    <% } %>
    <%= data_obj.dynamicREM_str %>
    <%= data_obj.outAssets_obj.open_boo
        ? outAssets_fun( {
                publicPath_str,
                assets_arr: Object.keys( assets_obj ),
                other_arr: data_obj.outAssets_obj.other_arr
            } )
        : `` %>
    <title><%= options_obj.title %></title>
    <link rel = 'manifest'
          type = 'application/manifest+json'
          href = '<%= manifest %>' <%= sriTool_fun( {
        isPro_boo: isPro,
        assets_obj,
        fileName_str: 'HelloWorld.manifest'
    } ) %> />
    <link rel = 'stylesheet'
          href = '<%= require( 'lessBDir/Basic.less' ) %>' <%= sriTool_fun( {
        isPro_boo: isPro,
        assets_obj,
        fileName_str: 'Basic'
    } ) %> />
    <link rel = 'stylesheet'
          href = '<%= require( 'lessBDir/XSA.less' ) %>' <%= sriTool_fun( {
        isPro_boo: isPro,
        assets_obj,
        fileName_str: 'XSA'
    } ) %> />
</head>
<body class = 'css-reset fullS ofh usN'>
<!--LocalRoll节点说明：局部滚动容器，用于避免全局滚动下出现的滚动穿透BUG！！！-->
<div id = 'LocalRoll'
     class = 'css-reset fullS ofa'>
    <!--HelloWorld节点说明：保证PC端下标准的最小尺寸(对于“pcMin”因为在相关样式中写好了媒体查询所以保持这样就行了)！！！请在这个节点里写HTML元素！！！-->
    <div id = 'HelloWorld'
         class = 'css-reset pcMin ofh'>
        <!--***************************************弹窗一类的元素Start***************************************-->
        <!--说明：这里可以写对话框、提示框、警告框等弹窗一类的元素！！！建议使用定位为“position: absolute”！！！-->
        <!--这样就算这些元素中有可滚动的节点，也不会出现滚动穿透！！！-->
        <!--<dialog>例子！！！</dialog>-->
        <!--***************************************弹窗一类的元素End***************************************-->
        <!--在这个节点里写主体HTML！！！-->
        <div class = 'css-reset'
             id = 'RefreshBtnTest'></div>
        <main class = 'css-reset fullS ofXhYa'>
            <article class = 'css-reset'>
                <br />
                <h1 class = 'css-reset'>Hello World</h1>
                <br />
                <div style = 'display: none;'
                     class = 'css-reset'>
                    <br />
                    <br />
                    <br />
                    <button type = 'button'
                            class = 'css-reset permissionsAPITestBtn1'>Clipboard API测试
                    </button>
                    <br />
                    <br />
                    <br />
                    <button type = 'button'
                            class = 'css-reset workerTestBtn1'>Worker测试按钮
                    </button>
                    <br />
                    <br />
                    <br />
                    <global4-vue-component-a1 ref = 'Global4VueComponentA1'
                                              class = 'css-reset'></global4-vue-component-a1>
                    <br />
                    <button type = 'button'
                            id = 'HEICImg'
                            class = 'css-reset'></button>
                    <br />
                    <button type = 'button'
                            class = 'css-reset transitionTest1'
                            @click = 'transitionTest1'>过渡动画测试按钮
                    </button>
                    <br />
                    <button type = 'button'
                            class = 'css-reset transitionTestBtn1'
                            @click = 'transitionTestBtn1'>列表交错过渡测试按钮
                    </button>
                    <br />
                    <template>
                        <p class = 'css-reset'>rootState1--->{{ rootState1 }}</p>
                        <br />
                        <p class = 'css-reset'>moduleA--->{{ moduleA }}</p>
                        <br />
                        <p class = 'css-reset'>moduleB--->{{ moduleB }}</p>
                        <br />
                        <p class = 'css-reset'>moduleB_1--->{{ moduleB_1 }}</p>
                        <br />
                        <p class = 'css-reset'>moduleB_1_1--->{{ moduleB_1_1 }}</p>
                        <br />
                        <p class = 'css-reset'>rootGetters1Computed--->{{ rootGetters1Computed }}</p>
                        <br />
                        <p class = 'css-reset'>moduleAGetters1Computed--->{{ moduleAGetters1Computed }}</p>
                        <br />
                        <p class = 'css-reset'>moduleBGetters1Computed--->{{ moduleBGetters1Computed }}</p>
                        <br />
                        <p class = 'css-reset'>moduleB_1Getters1Computed--->{{ moduleB_1Getters1Computed }}</p>
                        <br />
                        <p class = 'css-reset'>moduleB_1_1Getters1Computed--->{{ moduleB_1_1Getters1Computed }}</p>
                        <br />
                        <br />
                        <br />
                    </template>
                    <br />
                    <template>
                        <transition-group name = 'cell'
                                          tag = 'div'
                                          class = 'css-reset container'>
                            <span v-for = 'cell in cells'
                                  :key = 'cell.id'
                                  class = 'css-reset cell'>
                                {{ cell.number }}
                            </span>
                        </transition-group>
                    </template>
                    <br />
                    <div class = 'css-reset transitionTest1BoxPar flexBox flexSC'>
                        <template>
                            <!-- fadeToggle   slideToggle   showHideToggle   scaleCenterToggle -->
                            <transition name = 'showHideToggle'
                                        appear
                                        appear-class = 'scaleCenterToggle-enter'
                                        appear-to-class = 'scaleCenterToggle-enter-to'
                                        appear-active-class = 'scaleCenterToggle-enter-active'
                                        @before-enter = 'beforeEnter'
                                        @enter = 'enter'
                                        @after-enter = 'afterEnter'
                                        @enter-cancelled = 'enterCancelled'
                                        @before-leave = 'beforeLeave'
                                        @leave = 'leave'
                                        @after-leave = 'afterLeave'
                                        @leave-cancelled = 'leaveCancelled'
                                        @before-appear = 'beforeAppear'
                                        @appear = 'appear'
                                        @after-appear = 'afterAppear'
                                        @appear-cancelled = 'appearCancelled'>
                                <div class = 'css-reset transitionTest1Box'
                                     v-if = 'isTransitionTest1'>
                                    <div class = 'css-reset'>
                                        <br />
                                        <component is = 'VueComponDemo'
                                                   class = 'css-reset'></component>
                                        <br />
                                        <component :is = '"VueComponDemo"'
                                                   class = 'css-reset'></component>
                                        <br />
                                        <vue-compon-demo ref = 'VueComponDemo'
                                                         class = 'css-reset'></vue-compon-demo>
                                        <br />
                                        <vue-compon-demo-a ref = 'VueComponDemoA'
                                                           class = 'css-reset'></vue-compon-demo-a>
                                        <br />
                                        <example-a ref = 'ExampleA'
                                                   class = 'css-reset'></example-a>
                                        <br />
                                        <example-a1 ref = 'ExampleA1'
                                                    class = 'css-reset'></example-a1>
                                        <br />
                                        <example-a2 ref = 'ExampleA2'
                                                    class = 'css-reset'></example-a2>
                                        <br />
                                        <example-a21 ref = 'ExampleA21'
                                                     class = 'css-reset'></example-a21>
                                        <br />
                                        <example-a3 ref = 'ExampleA3'
                                                    class = 'css-reset'></example-a3>
                                        <br />
                                        <example-a31 ref = 'ExampleA31'
                                                     class = 'css-reset'></example-a31>
                                        <br />
                                        <p class = 'css-reset'>obj1.attr1->{{ obj1.attr1 }}</p>
                                        <br />
                                        <p class = 'css-reset'>obj1.attr2->{{ obj1.attr2 }}</p>
                                        <br />
                                        <p class = 'css-reset'>attr3->{{ attr3 }}</p>
                                        <br />
                                        <vue-demo ref = 'VueDemo'
                                                  class = 'css-reset'
                                                  v-bind.sync = 'obj1'
                                                  :attr3.sync = 'attr3'
                                                  data-atttr1 = 'data-atttr1'
                                                  v-slot = '{ VueDemo4SlotAttr1: slotAttr1 = "子组件没传插槽值" }'>{{ slotAttr1 }}
                                        </vue-demo>
                                        <br />
                                        <global4-vue-component-a ref = 'Global4VueComponentA'
                                                                 class = 'css-reset'></global4-vue-component-a>
                                        <br />
                                        <global4-vue-component-b ref = 'Global4VueComponentB'
                                                                 class = 'css-reset'></global4-vue-component-b>
                                        <br />
                                        <vue-demo2 ref = 'VueDemo2'
                                                   class = 'css-reset'
                                                   v-bind.sync = 'obj1'
                                                   :attr3.sync = 'attr3'
                                                   data-atttr1 = 'data-atttr1'
                                                   v-slot = '{ VueDemo4SlotAttr1: slotAttr1 = "子组件没传插槽值" }'>{{ slotAttr1 }}
                                        </vue-demo2>
                                    </div>
                                </div>
                            </transition>
                        </template>
                    </div>
                    <br />
                </div>
                <div id = 'VueRouterDemo1'
                     class = 'css-reset'>
                    <p class = 'css-reset'>
                        <router-link class = 'css-reset'
                                     to = '/router1'>Go to Router1
                        </router-link>
                        <router-link class = 'css-reset'
                                     to = '/router2'>Go to Router2
                        </router-link>
                        <router-link class = 'css-reset'
                                     :to = '"/user/" + userID'
                                     name = 'User'>Go to User
                        </router-link>
                    </p>
                    <router-view></router-view>
                    <button class = 'css-reset'
                            @click = 'btnClick1'>btnClick1
                    </button>
                </div>
                <div class = 'css-reset'>
                    <popup-info data-img = '${ require( "imgDir/XM_512_512.png" ) }'
                                data-text = 'Your card validation code (CVC) is an extra security feature — it is the last 3 or 4 numbers on the back of your card.'></popup-info>
                    <ul is = 'expanding-list'>
                        <li>UK
                            <ul>
                                <li>Yorkshire
                                    <ul>
                                        <li>Leeds
                                            <ul>
                                                <li>Train station</li>
                                                <li>Town hall</li>
                                                <li>Headrow</li>
                                            </ul>
                                        </li>
                                        <li>Bradford</li>
                                        <li>Hull</li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                        <li>USA
                            <ul>
                                <li>California
                                    <ul>
                                        <li>Los Angeles</li>
                                        <li>San Francisco</li>
                                        <li>Berkeley</li>
                                    </ul>
                                </li>
                                <li>Nevada</li>
                                <li>Oregon</li>
                            </ul>
                        </li>
                    </ul>
                    <div>
                        <button class = "add">Add custom-square to DOM</button>
                        <button class = "update">Update attributes</button>
                        <button class = "remove">Remove custom-square from DOM</button>
                    </div>
                    <cus-div></cus-div>
                    <cus-div-red></cus-div-red>
                </div>
            </article>
        </main>
    </div>
</div>
<!--<%= data_obj.weinreDevTool_str %>-->
</body>
</html>
